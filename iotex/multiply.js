console.log = Sidevm.inspect;

async function main() {
    console.log('fetching the guest program');
    // The program compiled from `https://github.com/simonerom/depin-zk-test/tree/learn/methods/guest`
    const response = await fetch('https://raw.githubusercontent.com/tolak/sidevm-risc0-js/main/iotex/multiply.elf');
    const program = new Uint8Array(await response.arrayBuffer());
    console.log('size of guest program:', program.byteLength);
    const input = testBatchMessage();
    console.log('Input encoded IoTex message list:', input);
    console.log('stdin:', );
    const result = Sidevm.experimental.runRisc0Program({
        env: {},
        program,
        args: [],
        stdin,
    });
    console.log('result:', result);
}

function testBatchMessage() {
    return '0x00000000000000000000000000000000340000008a00000001000000000000000000000000000000390000001c00000002000000000000000000000000000000500000007c000000030000000000000000000000000000003e0000004300000004000000000000000000000000000000520000009f00000005000000000000000000000000000000540000000e000000060000000000000000000000000000002a0000008b000000070000000000000000000000000000003200000039000000080000000000000000000000000000001d0000005a000000090000000000000000000000000000000e000000a90000000a0000000000000000000000000000004a0000005e0000000b0000000000000000000000000000002e000000520000000c0000000000000000000000000000000c000000030000000d00000000000000000000000000000014000000040000000e0000000000000000000000000000003b000000010000000f0000000000000000000000000000003e000000a1000000100000000000000000000000000000000500000034000000110000000000000000000000000000003500000068000000120000000000000000000000000000001b00000081000000130000000000000000000000000000000a0000007b00000014000000000000000000000000000000460000009f00000015000000000000000000000000000000560000006d00000016000000000000000000000000000000460000003d00000017000000000000000000000000000000210000003300000018000000000000000000000000000000140000003c00000019000000000000000000000000000000200000007c0000001a000000000000000000000000000000260000007a0000001b00000000000000000000000000000017000000860000001c000000000000000000000000000000440000006b0000001d000000000000000000000000000000340000002b0000001e00000000000000000000000000000012000000660000001f0000000000000000000000000000003a00000006000000200000000000000000000000000000001b0000004b000000210000000000000000000000000000004500000026000000220000000000000000000000000000005400000059000000230000000000000000000000000000003300000020000000240000000000000000000000000000002b0000004300000025000000000000000000000000000000110000005b00000026000000000000000000000000000000090000004f000000270000000000000000000000000000003c0000008d000000280000000000000000000000000000003a000000b30000002900000000000000000000000000000017000000170000002a00000000000000000000000000000009000000760000002b0000000000000000000000000000004a000000720000002c0000000000000000000000000000000e0000008f0000002d000000000000000000000000000000470000000c0000002e00000000000000000000000000000047000000ac0000002f000000000000000000000000000000060000000000000030000000000000000000000000000000590000009300000031000000000000000000000000000000250000008200000032000000000000000000000000000000080000006600000033000000000000000000000000000000270000001a000000340000000000000000000000000000001800000097000000350000000000000000000000000000003b00000009000000360000000000000000000000000000004f0000002500000037000000000000000000000000000000360000001a000000380000000000000000000000000000001d00000010000000390000000000000000000000000000003d000000490000003a00000000000000000000000000000013000000230000003b0000000000000000000000000000004e000000250000003c0000000000000000000000000000002c000000400000003d00000000000000000000000000000058000000ad0000003e00000000000000000000000000000057000000af0000003f0000000000000000000000000000002b00000077000000400000000000000000000000000000004300000000000000410000000000000000000000000000000b0000007d00000042000000000000000000000000000000320000008e000000430000000000000000000000000000005500000084000000440000000000000000000000000000003f0000009f000000450000000000000000000000000000000e000000450000004600000000000000000000000000000025000000430000004700000000000000000000000000000045000000b200000048000000000000000000000000000000460000001d0000004900000000000000000000000000000051000000920000004a000000000000000000000000000000500000007c0000004b00000000000000000000000000000006000000a50000004c0000000000000000000000000000001e000000000000004d000000000000000000000000000000370000006a0000004e0000000000000000000000000000001c0000009a0000004f0000000000000000000000000000003700000011000000500000000000000000000000000000001f0000006100000051000000000000000000000000000000310000006b00000052000000000000000000000000000000220000001600000053000000000000000000000000000000170000006f000000540000000000000000000000000000000f0000007b0000005500000000000000000000000000000013000000720000005600000000000000000000000000000004000000740000005700000000000000000000000000000007000000670000005800000000000000000000000000000039000000b200000059000000000000000000000000000000510000001a0000005a000000000000000000000000000000510000001b0000005b000000000000000000000000000000270000002a0000005c0000000000000000000000000000001c0000007e0000005d000000000000000000000000000000140000000d0000005e000000000000000000000000000000480000004b0000005f0000000000000000000000000000002a00000004000000600000000000000000000000000000003100000082000000610000000000000000000000000000000f0000001b000000620000000000000000000000000000001f000000ae000000630000000000000000000000000000004400000010000000';
}

main().catch(console.error);